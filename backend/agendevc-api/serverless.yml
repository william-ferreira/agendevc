org: agendevc
app: agendevc
service: agendevc-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: sa-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:Get^"
        - "dynamodb:Scan*"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-customerTable-${sls:stage}

  environment:
    DYNAMODB_CUSTOMER_TABLE: ${self:service}-customerTable-${sls:stage}

functions:
  createCustomer:
    handler: functions/prestadorServico/createPrestadorServico.createPrestadorServico
    events:
      - httpApi:
          path: /addPrestadorServico
          method: post
  getCustomers:
    handler: functions/prestadorServico/getPrestadorServico.getPrestadorServico
    events: 
      - httpApi:
          path: /getAllPrestadorServicos
          method: get

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-customerTable-${sls:stage}